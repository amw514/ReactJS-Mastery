{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  increment(state) {\n    state.counter++;\n  },\n  decrement(state) {\n    state.counter--;\n  },\n  increase(state, action) {\n    state.counter += action.amount;\n  },\n  toggleCounter(state) {\n    state.showCounter = !state.showCounter;\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n// store.subscribe(store.getState());\n// store.dispatch({ type: \"increment\" });\n\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"sources":["F:/practicalProgramming/ReactJS-Mastery/Academind-React/attachments/31 Redux Basics/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  increment(state) {\r\n    state.counter++;\r\n  },\r\n  decrement(state) {\r\n    state.counter--;\r\n  },\r\n  increase(state, action) {\r\n    state.counter += action.amount;\r\n  },\r\n  toggleCounter(state) {\r\n    state.showCounter = !state.showCounter;\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n});\r\n\r\n// store.subscribe(store.getState());\r\n// store.dispatch({ type: \"increment\" });\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,SAASA,CAACC,KAAK,EAAE;IACfA,KAAK,CAACL,OAAO,EAAE;EACjB,CAAC;EACDM,SAASA,CAACD,KAAK,EAAE;IACfA,KAAK,CAACL,OAAO,EAAE;EACjB,CAAC;EACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;IACtBH,KAAK,CAACL,OAAO,IAAIQ,MAAM,CAACC,MAAM;EAChC,CAAC;EACDC,aAAaA,CAACL,KAAK,EAAE;IACnBA,KAAK,CAACJ,WAAW,GAAG,CAACI,KAAK,CAACJ,WAAW;EACxC;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMU,KAAK,GAAGb,cAAc,CAAC;EAC3Bc,OAAO,EAAEV,YAAY,CAACU;AACxB,CAAC,CAAC;;AAEF;AACA;;AAEA,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}