{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  increment(state) {\n    state.counter++;\n  },\n  decrement(state) {\n    state.counter--;\n  },\n  increase(state, action) {\n    state.counter += action.amount;\n  },\n  toggleCounter() {}\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\n\n// store.subscribe(store.getState());\n// store.dispatch({ type: \"increment\" });\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["F:/practicalProgramming/ReactJS-Mastery/Academind-React/attachments/31 Redux Basics/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  increment(state) {\r\n    state.counter++;\r\n  },\r\n  decrement(state) {\r\n    state.counter--;\r\n  },\r\n  increase(state, action) {\r\n    state.counter += action.amount;\r\n  },\r\n  toggleCounter() {},\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\n// store.subscribe(store.getState());\r\n// store.dispatch({ type: \"increment\" });\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,SAASA,CAACC,KAAK,EAAE;IACfA,KAAK,CAACJ,OAAO,EAAE;EACjB,CAAC;EACDK,SAASA,CAACD,KAAK,EAAE;IACfA,KAAK,CAACJ,OAAO,EAAE;EACjB,CAAC;EACDM,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;IACtBH,KAAK,CAACJ,OAAO,IAAIO,MAAM,CAACC,MAAM;EAChC,CAAC;EACDC,aAAaA,CAAA,EAAG,CAAC;AACnB,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACN,KAAK,GAAGL,YAAY,EAAEQ,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEG,KAAK,CAACH;IACrB,CAAC;EACH;EACA,IAAIM,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEG,KAAK,CAACH;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACI,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGO,MAAM,CAACC,MAAM;MACtCP,WAAW,EAAEG,KAAK,CAACH;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLV,WAAW,EAAE,CAACG,KAAK,CAACH,WAAW;MAC/BD,OAAO,EAAEI,KAAK,CAACJ;IACjB,CAAC;EACH;EAEA,OAAOI,KAAK;AACd,CAAC;AAED,MAAMQ,KAAK,GAAGf,WAAW,CAACa,cAAc,CAAC;;AAEzC;AACA;;AAEA,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}